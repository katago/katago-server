# Generated by Django 3.0.5 on 2020-05-04 03:22

from django.conf import settings
import django.contrib.postgres.fields.jsonb
import django.core.files.storage
from django.db import migrations, models
import django.db.models.deletion
import katago_server.contrib.validators
import katago_server.games.models.abstract_game


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('runs', '0003_auto_20200504_0026'),
        ('trainings', '0007_auto_20200504_0322'),
        ('games', '0004_auto_20200504_0026'),
    ]

    operations = [
        migrations.CreateModel(
            name='RatingGame',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='creation date')),
                ('board_size_x', models.IntegerField(default=19, help_text='Width of board', verbose_name='board size x')),
                ('board_size_y', models.IntegerField(default=19, help_text='Height of board', verbose_name='board size y')),
                ('handicap', models.IntegerField(default=0, help_text='Number of handicap stones, generally 0 or >= 2', verbose_name='handicap')),
                ('komi', models.DecimalField(decimal_places=1, default=7.0, help_text="Number of points added to white's score", max_digits=3, verbose_name='komi')),
                ('rules', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, help_text='Rules are described at https://lightvector.github.io/KataGo/rules.html', null=True, verbose_name='rules')),
                ('extra_metadata', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, help_text='Additional miscellaneous metadata about this game', null=True, verbose_name='extra metadata')),
                ('winner', models.CharField(choices=[('W', 'White'), ('B', 'Black'), ('0', 'Draw (Jigo)'), ('-', 'No Result (Moshoubou)')], db_index=True, max_length=1, verbose_name='winner')),
                ('score', models.DecimalField(blank=True, decimal_places=1, help_text='Final white points minus black points', max_digits=4, null=True, verbose_name='score')),
                ('resigned', models.BooleanField(db_index=True, default=False, help_text='Did this game end in resignation?', verbose_name='resigned')),
                ('sgf_file', models.FileField(max_length=200, storage=django.core.files.storage.FileSystemStorage(location='/data/games/sgf'), upload_to=katago_server.games.models.abstract_game.upload_sgf_to, validators=[katago_server.contrib.validators.FileValidator(magic_types=('Smart Game Format (Go)',), max_size=10485760)], verbose_name='SGF file')),
                ('kg_game_uid', models.CharField(default='', help_text='Game uid from KataGo client', max_length=48, verbose_name='KG game uid')),
                ('black_network', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ratinggame_games_as_black', to='trainings.Network', verbose_name='black player network')),
                ('run', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ratinggame_games', to='runs.Run', verbose_name='run')),
                ('submitted_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ratinggame_games', to=settings.AUTH_USER_MODEL, verbose_name='submitted by')),
                ('white_network', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ratinggame_games_as_white', to='trainings.Network', verbose_name='white player network')),
            ],
            options={
                'verbose_name': 'Game: Rating',
                'ordering': ['-created_at'],
            },
        ),
        migrations.RenameField(
            model_name='traininggame',
            old_name='unpacked_file',
            new_name='training_data_file',
        ),
        migrations.RemoveField(
            model_name='traininggame',
            name='game_extra_params',
        ),
        migrations.RemoveField(
            model_name='traininggame',
            name='game_hash',
        ),
        migrations.RemoveField(
            model_name='traininggame',
            name='has_resigned',
        ),
        migrations.RemoveField(
            model_name='traininggame',
            name='initial_position_extra_params',
        ),
        migrations.RemoveField(
            model_name='traininggame',
            name='initial_position_sgf_file',
        ),
        migrations.RemoveField(
            model_name='traininggame',
            name='result',
        ),
        migrations.RemoveField(
            model_name='traininggame',
            name='rules_params',
        ),
        migrations.AddField(
            model_name='traininggame',
            name='extra_metadata',
            field=django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, help_text='Additional miscellaneous metadata about this game', null=True, verbose_name='extra metadata'),
        ),
        migrations.AddField(
            model_name='traininggame',
            name='kg_game_uid',
            field=models.CharField(default='', help_text='Game uid from KataGo client', max_length=48, verbose_name='KG game uid'),
        ),
        migrations.AddField(
            model_name='traininggame',
            name='resigned',
            field=models.BooleanField(db_index=True, default=False, help_text='Did this game end in resignation?', verbose_name='resigned'),
        ),
        migrations.AddField(
            model_name='traininggame',
            name='rules',
            field=django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, help_text='Rules are described at https://lightvector.github.io/KataGo/rules.html', null=True, verbose_name='rules'),
        ),
        migrations.AddField(
            model_name='traininggame',
            name='winner',
            field=models.CharField(choices=[('W', 'White'), ('B', 'Black'), ('0', 'Draw (Jigo)'), ('-', 'No Result (Moshoubou)')], db_index=True, default='0', max_length=1, verbose_name='winner'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='traininggame',
            name='black_network',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='traininggame_games_as_black', to='trainings.Network', verbose_name='black player network'),
        ),
        migrations.AlterField(
            model_name='traininggame',
            name='board_size_x',
            field=models.IntegerField(default=19, help_text='Width of board', verbose_name='board size x'),
        ),
        migrations.AlterField(
            model_name='traininggame',
            name='board_size_y',
            field=models.IntegerField(default=19, help_text='Height of board', verbose_name='board size y'),
        ),
        migrations.AlterField(
            model_name='traininggame',
            name='handicap',
            field=models.IntegerField(default=0, help_text='Number of handicap stones, generally 0 or >= 2', verbose_name='handicap'),
        ),
        migrations.AlterField(
            model_name='traininggame',
            name='komi',
            field=models.DecimalField(decimal_places=1, default=7.0, help_text="Number of points added to white's score", max_digits=3, verbose_name='komi'),
        ),
        migrations.AlterField(
            model_name='traininggame',
            name='score',
            field=models.DecimalField(blank=True, decimal_places=1, help_text='Final white points minus black points', max_digits=4, null=True, verbose_name='score'),
        ),
        migrations.AlterField(
            model_name='traininggame',
            name='sgf_file',
            field=models.FileField(max_length=200, storage=django.core.files.storage.FileSystemStorage(location='/data/games/sgf'), upload_to=katago_server.games.models.abstract_game.upload_sgf_to, validators=[katago_server.contrib.validators.FileValidator(magic_types=('Smart Game Format (Go)',), max_size=10485760)], verbose_name='SGF file'),
        ),
        migrations.AlterField(
            model_name='traininggame',
            name='white_network',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='traininggame_games_as_white', to='trainings.Network', verbose_name='white player network'),
        ),
        migrations.DeleteModel(
            name='RankingEstimationGame',
        ),
    ]
