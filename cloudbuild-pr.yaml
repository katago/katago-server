steps:
- name: 'gcr.io/cloud-builders/docker'
  args: [ 'build', '-t', 'katago-django', '.', '-f', './compose/local/django/Dockerfile' ]
- name: gcr.io/cloud-builders/docker
  args: ['run', '-d', '--network=cloudbuild', '--env=POSTGRES_HOST_AUTH_METHOD=trust', '--env=POSTGRES_PASSWORD=katago', '--env=POSTGRES_USER=katago', '--env=POSTGRES_DB=katago', '--name=postgres', 'postgres:13']
- name: jwilder/dockerize:0.6.1
  args: ['dockerize', '-timeout=60s', '-wait=tcp://katago:katago@postgres:5432/katago']
- name: postgres:13
  args: ['psql', 'postgresql://katago:katago@postgres:5432/katago', '--command', 'SELECT * FROM INFORMATION_SCHEMA.Tables']
- name: gcr.io/cloud-builders/docker
  args: ['run', '--network=cloudbuild', '--env-file=./envs/local/django',  '--env=POSTGRES_HOST_AUTH_METHOD=trust', '--env=POSTGRES_PASSWORD=katago', '--env=POSTGRES_USER=katago', '--env=POSTGRES_DB=katago', '--name=katago-django', 'katago-django', 'manage.py', 'test']
- name: gcr.io/cloud-builders/docker
  args: ['rm', '--force', 'postgres']
