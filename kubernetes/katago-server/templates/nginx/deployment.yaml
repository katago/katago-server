apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: {{.Values.global.namespace}}
  labels:
    app: nginx
    app.kubernetes.io/component: nginx
    {{- include "katago-server.labels" . | nindent 4 }}
spec:
  replicas: {{.Values.nginx.replicaCount}}
  selector:
    matchLabels:
      app: nginx
      {{- include "katago-server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: nginx
        {{- include "katago-server.selectorLabels" . | nindent 8 }}
      annotations:
        checksum/nginx_config: {{ include (print $.Template.BasePath "/nginx/configmap.yaml") . | sha256sum }}
    spec:
      containers:
      - name: nginx
        image: {{.Values.nginx.image.repo}}:{{.Values.nginx.image.tag}}
        ports:
        - name: nginx-port
          containerPort: {{.Values.nginx.containerPort}}
          protocol: TCP
        command: [ "/docker-entrypoint.sh", "nginx", "-g", "daemon off;"]
        readinessProbe:
          httpGet:
            path: {{.Values.nginx.readinessPath}}
            port: {{.Values.nginx.containerPort}}
          initialDelaySeconds: 5
          periodSeconds: 6
          timeoutSeconds: 2
          failureThreshold: 2
        livenessProbe:
          httpGet:
            path: {{.Values.nginx.readinessPath}}
            port: {{.Values.nginx.containerPort}}
          initialDelaySeconds: 5
          periodSeconds: 20
          timeoutSeconds: 3
          failureThreshold: 5
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - name: nginx-fileserver-storage
          mountPath: /data
          subPath: {{.Values.fileserver.subPath}}
        - name: nginx-config-volume
          mountPath: /etc/nginx/
          readOnly: true
        - name: nginx-default-config-volume
          mountPath: /etc/nginx/conf.d/
          readOnly: true
        resources:
          requests:
            cpu: 100m
      topologySpreadConstraints:
      - maxSkew: 2
        topologyKey: "kubernetes.io/hostname"
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app: nginx
            {{- include "katago-server.selectorLabels" . | nindent 12 }}
      volumes:
      - name: nginx-fileserver-storage
        persistentVolumeClaim:
          claimName: fileserver-claim
      - name: nginx-config-volume
        configMap:
          name: nginx-config
          items:
            - key: nginxConfig
              path: nginx.conf
      - name: nginx-default-config-volume
        configMap:
          name: nginx-default-config
          items:
            - key: nginxDefaultConfig
              path: default.conf
