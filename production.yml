version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}

services:
  datadog:
    image: datadog/agent:latest
    container_name: datadog-agent
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock:ro
    - /proc/:/host/proc/:ro
    - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
    restart: always
    env_file:
      - ./envs/production/datadog
      - ./envs/production/postgres

  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: katago_server_production_django
    depends_on:
      - postgres
      - redis
    env_file:
      - ./envs/production/django
      - ./envs/production/postgres
    volumes:
      - ${UPLOADED_DATA_DIRECTORY:-./data}:/data
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: katago_server_production_postgres
    volumes:
      - ./compose/production/postgres/postgres.conf:/etc/postgresql/postgresql.conf
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - ./envs/production/postgres
    command: ["-c", "config_file=/etc/postgresql/postgresql.conf"]
    labels:
      com.datadoghq.ad.check_names: '["postgres"]'
      com.datadoghq.ad.init_configs: '[{}]'
      com.datadoghq.ad.instances: '[{"host":"%%host%%", "port":"5432", "username":"%%env_POSTGRES_USER%%", "password":"%%env_POSTGRES_PASSWORD%%", "dbname": "%%env_POSTGRES_DB%%"}]'
      com.datadoghq.ad.logs: '[{"source": "postgresql", "service": "postgresql"}]'

  traefik:
    build:
      context: .
      dockerfile: ./compose/production/traefik/Dockerfile
    image: katago_server_production_traefik
    depends_on:
      - django
      - nginx
    volumes:
      - production_traefik:/etc/traefik/acme
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
      - "0.0.0.0:5555:5555"
    command:
      - "--log.level=INFO"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.flower.address=:5555"
      - "--certificatesresolvers.letsencrypt=true"
      - "--certificatesresolvers.letsencrypt.acme.email=${TRAEFIK_LETSENCRYPT_EMAIL:?traefik_letsencrypt_email_env_missing}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/etc/traefik/acme/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--providers.file.filename=/etc/traefik/traefik.toml"
      - "--providers.file.watch=true"
    env_file:
      - ./envs/production/traefik

  nginx:
    image: nginx
    depends_on:
      - django
    volumes:
      - ./compose/production/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ${UPLOADED_DATA_DIRECTORY:-./data}/:/data

  redis:
    image: redis:5.0
    ulimits:
      nproc: 65535
      nofile:
        soft: 26677
        hard: 46677
    sysctls:
      net.core.somaxconn: '511'
    labels:
      com.datadoghq.ad.check_names: '["redisdb"]'
      com.datadoghq.ad.init_configs: '[{}]'
      com.datadoghq.ad.instances: '[{"host": "%%host%%","port":"6379"}]'

  celeryworker:
    <<: *django
    image: katago_server_production_celeryworker
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: katago_server_production_celerybeat
    command: /start-celerybeat

  flower:
    <<: *django
    image: katago_server_production_flower
    command: /start-flower


